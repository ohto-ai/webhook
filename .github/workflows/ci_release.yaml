name: Cross-platform CI & Release

on:
  push:
    paths:
      - '.github/workflows/ci_release.yaml'
      - 'src/*'
      - 'inc/*'
      - 'CMakeLists.txt'
      - '*.cmake'
  pull_request:
    paths:
      - '.github/workflows/ci_release.yaml'
      - 'src/*'
      - 'inc/*'
      - 'CMakeLists.txt'
      - '*.cmake'
  workflow_dispatch:
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, windows-2019, windows-2022, macos-12]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'true'
        fetch-depth: 1
    - name: Build
      id: build
      shell: bash
      run: |
        cmake -B build
        source scripts/env.sh
        cmake --build build --config Release --target $bin_name -j8

        if [[ $os_name == "Linux" ]]; then
          package_path=$deb_path
          asset_name=${{ matrix.os }}_$deb_file
          cmake --build build --config Release --target package -j8
        else
          package_path=$bin_path
          asset_name="${bin_name}_${{ matrix.os }}_${{ github.ref_name }}"
        fi

        echo "package_name=$bin_name" >> $GITHUB_OUTPUT
        echo "package_path=$package_path" >> $GITHUB_OUTPUT
        echo "commit_hash=$commit_hash" >> $GITHUB_OUTPUT
        echo "asset_name=$asset_name" >> $GITHUB_OUTPUT
    - name: Test
      run: |
        cmake --build build --config Release -j8
        cd build/test/
        ctest -C Release --output-on-failure
    - name: Upload Artifacts
      if: github.ref_name == 'master' || github.ref_type == 'tag'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.build.outputs.package_name }}
        path: ${{ steps.build.outputs.package_path }}
    - name: Upload Release
      if: github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ steps.build.outputs.package_path }}
        asset_name: ${{ steps.build.outputs.asset_name }}
        tag: ${{ github.ref_name }}
        overwrite: true
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      if: ${{ failure() }}
